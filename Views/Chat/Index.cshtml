@{
    ViewData["Title"] = "Chat";
    var solicitud = ViewBag.Solicitud;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Chat - Solicitud #@solicitud.SolicitudID</h5>
                </div>
                <div class="card-body">
                    <div class="chat-messages" id="chatMessages">
                        <!-- Los mensajes se cargarán aquí dinámicamente -->
                    </div>
                    
                    <div class="chat-input mt-3">
                        <div class="input-group">
                            <input type="text" id="messageInput" class="form-control" placeholder="Escribe un mensaje...">
                            <button class="btn btn-primary" id="sendButton">Enviar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        // Unirse al grupo de la solicitud
        connection.start()
            .then(() => {
                connection.invoke("UnirseASolicitud", @solicitud.SolicitudID);
            })
            .catch(err => console.error(err));

        // Manejar mensajes recibidos
        connection.on("ReceiveMessage", (sender, message, timestamp) => {
            const messageElement = document.createElement("div");
            messageElement.className = `message ${sender === '@User.Identity.Name' ? "sent" : "received"}`;
            messageElement.innerHTML = `
                <div class="message-content">
                    <strong>${sender}</strong>
                    <p>${message}</p>
                    <small class="message-time">${new Date(timestamp).toLocaleString()}</small>
                </div>
            `;
            document.getElementById("chatMessages").appendChild(messageElement);
            
            // Reproducir sonido de notificación
            const audio = new Audio('/sounds/notification.mp3');
            audio.play();

            // Scroll al último mensaje
            const chatMessages = document.getElementById("chatMessages");
            chatMessages.scrollTop = chatMessages.scrollHeight;
        });

        // Enviar mensaje
        document.getElementById("sendButton").addEventListener("click", async () => {
            const messageInput = document.getElementById("messageInput");
            const message = messageInput.value.trim();
            
            if (message) {
                try {
                    await connection.invoke("EnviarMensaje", @solicitud.SolicitudID, message);
                    messageInput.value = "";
                } catch (err) {
                    console.error(err);
                    alert("No se pudo enviar el mensaje.");
                }
            }
        });

        // Enviar mensaje con Enter
        document.getElementById("messageInput").addEventListener("keypress", async (e) => {
            if (e.key === "Enter") {
                e.preventDefault();
                document.getElementById("sendButton").click();
            }
        });
    </script>
}

<style>
    .chat-messages {
        height: 400px;
        overflow-y: auto;
        padding: 1rem;
    }

    .message {
        margin-bottom: 1rem;
        max-width: 70%;
    }

    .message.sent {
        margin-left: auto;
    }

    .message.received {
        margin-right: auto;
    }

    .message-content {
        padding: 0.5rem 1rem;
        border-radius: 1rem;
        background-color: #f8f9fa;
    }

    .message.sent .message-content {
        background-color: #007bff;
        color: white;
    }

    .message-time {
        font-size: 0.8rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    .message.sent .message-time {
        color: #e9ecef;
    }
</style> 
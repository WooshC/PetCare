// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetCare.Data;

#nullable disable

namespace PetCare.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetCare.Models.Calificacion", b =>
                {
                    b.Property<int>("CalificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalificacionID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuidadorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("CalificacionID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("CuidadorID");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("PetCare.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("DocumentoIdentidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("DocumentoIdentidadArchivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("DocumentoVerificado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaVerificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ClienteID");

                    b.HasIndex("UsuarioID")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PetCare.Models.Cuidador", b =>
                {
                    b.Property<int>("CuidadorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuidadorID"));

                    b.Property<string>("Biografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CalificacionPromedio")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<byte[]>("ComprobanteServiciosArchivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentoIdentidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("DocumentoIdentidadArchivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("DocumentoVerificado")
                        .HasColumnType("bit");

                    b.Property<string>("Experiencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaVerificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("HorarioAtencion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TarifaPorHora")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TelefonoEmergencia")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("CuidadorID");

                    b.HasIndex("UsuarioID")
                        .IsUnique();

                    b.ToTable("Cuidadores");
                });

            modelBuilder.Entity("PetCare.Models.DocumentoVerificacion", b =>
                {
                    b.Property<int>("DocumentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentoID"));

                    b.Property<byte[]>("Archivo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVerificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("DocumentoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("DocumentosVerificacion");
                });

            modelBuilder.Entity("PetCare.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RolID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolID = 1,
                            Descripcion = "Acceso completo al sistema",
                            NombreRol = "Administrador"
                        },
                        new
                        {
                            RolID = 2,
                            Descripcion = "Personas que ofrecen servicios de cuidado de mascotas",
                            NombreRol = "Cuidador"
                        },
                        new
                        {
                            RolID = 3,
                            Descripcion = "Dueños de mascotas que buscan servicios",
                            NombreRol = "Cliente"
                        });
                });

            modelBuilder.Entity("PetCare.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime2");

                    b.HasKey("UsuarioID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioID = 1,
                            Activo = true,
                            ContrasenaHash = "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918",
                            Direccion = "Calle Principal 123",
                            Email = "admin@petcare.com",
                            FechaRegistro = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NombreCompleto = "Administrador del Sistema",
                            NombreUsuario = "admin",
                            Telefono = "0998887777"
                        });
                });

            modelBuilder.Entity("PetCare.Models.UsuarioRol", b =>
                {
                    b.Property<int>("UsuarioRolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioRolID"));

                    b.Property<DateTime>("FechaAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("UsuarioRolID");

                    b.HasIndex("RolID");

                    b.HasIndex("UsuarioID", "RolID")
                        .IsUnique();

                    b.ToTable("UsuarioRoles");

                    b.HasData(
                        new
                        {
                            UsuarioRolID = 1,
                            FechaAsignacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RolID = 1,
                            UsuarioID = 1
                        });
                });

            modelBuilder.Entity("PetCare.Models.Calificacion", b =>
                {
                    b.HasOne("PetCare.Models.Cliente", "Cliente")
                        .WithMany("CalificacionesRealizadas")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetCare.Models.Cuidador", "Cuidador")
                        .WithMany("CalificacionesRecibidas")
                        .HasForeignKey("CuidadorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Cuidador");
                });

            modelBuilder.Entity("PetCare.Models.Cliente", b =>
                {
                    b.HasOne("PetCare.Models.Usuario", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("PetCare.Models.Cliente", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PetCare.Models.Cuidador", b =>
                {
                    b.HasOne("PetCare.Models.Usuario", "Usuario")
                        .WithOne("Cuidador")
                        .HasForeignKey("PetCare.Models.Cuidador", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PetCare.Models.DocumentoVerificacion", b =>
                {
                    b.HasOne("PetCare.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PetCare.Models.UsuarioRol", b =>
                {
                    b.HasOne("PetCare.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetCare.Models.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PetCare.Models.Cliente", b =>
                {
                    b.Navigation("CalificacionesRealizadas");
                });

            modelBuilder.Entity("PetCare.Models.Cuidador", b =>
                {
                    b.Navigation("CalificacionesRecibidas");
                });

            modelBuilder.Entity("PetCare.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PetCare.Models.Usuario", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Cuidador");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
